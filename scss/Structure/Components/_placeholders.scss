/**
 * Components - Skeleton / Placeholders
 *
*/

/*@formatter:off*/

/*@formatter:on*/

.Placeholder {
  display: inline-block;
  min-height: 1em;
  cursor: wait;

  vertical-align: middle;
  opacity: 0.5;

  background-color: currentColor;
}

.Placeholder.Btn:before {
  display: inline-block;
  content: "";
}

//
// Headers
//

.Placeholder:is(h1, h2, h3, h4, h5, h6) {
  transform: scale(1, 0.80);

  &:before {
    display: inline-block;
    content: "";
  }
}

//
// Paragraph
//

.Placeholder-paragraph {
  .Placeholder {
    &:first-child {
      width: 92%;
      float: right;
    }

    &:nth-child(2) {
      clear: both;
    }

    &:last-child {
      width: 80% - random(40) * 1%;
    }

    @for $i from 1 through 10 {
      &:nth-child(#{$i}n) {
        animation-delay: #{$i * 0.7}s;
      }
    }
  }
}

//
// Textual Effect
//

@function randomMinMax($min, $max) {
  $rand: random();
  $randomNum: $min + floor($rand * (($max - $min) + 1));

  @return $randomNum;
}

/// Calculate n random numbers that sum y.
@function RandomNumbersWithSum($groups:3, $total:100) {
  $numbers: [];
  @for $i from 1 through $groups {
    $num: randomMinMax(20, $total - 20 - ($groups - $i));
    @if ($i==1) {
      $num: randomMinMax(5, 30);
    }
    $total: $total - $num;
    $numbers: append($numbers, $num)
  }
  $numbers: append($numbers, $total);

  @return $numbers;
}

.Placeholder-textual .Placeholder{
  $gap: 6px;
  $color: currentColor;

  background-color: transparent;

  @for $i from 1 to 5 {
    &:nth-child(#{$i}n) {
      $percentages: RandomNumbersWithSum(3, 100);
      $per1: 1% * nth($percentages,1);
      $per2: $per1 + 1% * nth($percentages,2);
      $per3: $per2 + 1% * nth($percentages,3);

      // this should randomize by percent up to 100% (20%, 45%, 77%, ...)
      background-image: linear-gradient(90deg,
              $color $per1, transparent calc(#{$per1} + 1px), transparent calc(#{$per1} + #{$gap}), $color calc(#{$per1} + #{$gap}),
              $color $per2, transparent calc(#{$per2} + 1px), transparent calc(#{$per2} + #{$gap}), $color calc(#{$per2} + #{$gap}),
              $color $per3, transparent calc(#{$per3} + 1px), transparent calc(#{$per3} + #{$gap}), $color calc(#{$per3} + #{$gap}),
              $color);
    }
  }
}

//
// Size
//

.Placeholder-xs .Placeholder,
.Placeholder-xs {
  min-height: 0.6em;
}

.Placeholder-sm .Placeholder,
.Placeholder-sm {
  min-height: 0.8em;
}

.Placeholder-lg .Placeholder,
.Placeholder-lg {
  min-height: 1.2em;
}

//
// Anim
//

.Placeholder-glow .Placeholder {
  animation: Keyframe-ph-glow 2s ease-in-out infinite;
}

@keyframes Keyframe-ph-glow {
  //50% {
  //  opacity: .3;
  //}
  0% {
    opacity: .3;
  }
  50% {
    opacity: .5;
  }
  100% {
    opacity: .3;
  }
}

.Placeholder-wave .Placeholder {
  mask-image: linear-gradient(130deg, #000 55%, rgba(0, 0, 0, 0.8) 75%, #000 95%);
  mask-size: 200% 100%;
  animation: Keyframe-ph-wave 2s linear infinite;
}

@keyframes Keyframe-ph-wave {
  to {
    mask-position: -200% 0;
  }
}
