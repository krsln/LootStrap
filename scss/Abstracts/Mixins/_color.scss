// ===========================================================================
// Mixins - Color
// ===========================================================================

// CSS Variables (Custom Properties)

//@mixin Theme-components($theme-colors, $theme-components) {
//  $var-ls: $var-Prefix; // ls-
//
//  $light-Primary: hsl(265, 100%, 47%); // #6400F0
//  $light-Primary-variant: hsl(258, 100%, 35%); // #3600B3
//  $light-Secondary: hsl(174, 96%, 44%); // #04DCC6
//  $light-Secondary-variant: hsl(180, 100%, 26%); // #008585
//
//  $dark-Primary: hsl(267, 95%, 76%); // #BC88FC
//  $dark-Primary-variant: hsl(258, 100%, 35%); // #3600B3
//  $dark-Secondary: hsl(174, 96%, 44%); // #04DCC6 Secondary
//
//  $fg-muted: hsla(213, 11%, 69%, 1);
//
//  @each $colorKey, $colorValue in $theme-colors {
//    $color-lightness: lightness($colorValue);
//    /*
//    // Colors: primary, secondary, success, info, warning, danger
//    */
//    $color-body: Color-ByLightness($colorValue, 90%); // 90% - DON'T CHANGE
//    $color-border: Color-ByLightness($colorValue, 85%); // 80
//    $color-shadow-rgb: 0, 0, 0 ; // Has to be this way.. check shadows
//
//    $color-primary: $colorValue; // lighten($colorValue, 10%);
//    $color-surface: Color-ByLightness($colorValue, 96%); // 96% - DON'T CHANGE
//
//    $color-lightest: Color-ByLightness($colorValue, 94%); // 95% - DON'T CHANGE
//    $color-light: Color-ByLightness($colorValue, ($color-lightness + 36));
//    $color-dark: Color-ByLightness($colorValue, ($color-lightness + 18));
//    $color-darkest: $colorValue;
//
//    /*
//    // Colors: dark, night, light
//    */
//    @if ($colorKey=='dark' or $colorKey=='night') {
//      /*
//      Rules:
//      - Body is darkest
//      - Surface is second darkest
//      - lightness: $Night 7%, $Dark 18%
//      */
//      $color-body: Color-ByLightness($colorValue, ($color-lightness - 6));
//      $color-border: Color-ByLightness($colorValue, ($color-lightness + 10));
//      $color-shadow-rgb: 255, 255, 255;
//
//      $color-primary: $dark-Primary;
//      $color-surface: $colorValue;
//
//      $color-lightest: Color-ByLightness($colorValue, ($color-lightness + 16));
//      $color-light: Color-ByLightness($colorValue, ($color-lightness + 12));
//      $color-dark: Color-ByLightness($colorValue, ($color-lightness + 8));
//      $color-darkest: Color-ByLightness($colorValue, ($color-lightness + 4));
//    }
//    @if ($colorKey=='light') {
//      /*
//       Rules:
//       - Reversed
//       - lightness: 98% #fafafa rgb(250, 250, 250)
//      */
//      $color-body: Color-ByLightness($colorValue, ($color-lightness - 5));
//      $color-border: Color-ByLightness($colorValue, ($color-lightness - 10));
//
//      $color-primary: $light-Primary; // #6400f0;
//      $color-surface: Color-ByLightness($colorValue, ($color-lightness + 2)); // #fff
//
//      $color-lightest: $colorValue;
//      $color-light: Color-ByLightness($colorValue, ($color-lightness - 2));
//      $color-dark: Color-ByLightness($colorValue, ($color-lightness - 4));
//      $color-darkest: Color-ByLightness($colorValue, ($color-lightness - 8));
//    }
//
//    /*
//    // Colors: primary, secondary, success, info, warning, danger, dark, night, light
//    */
//    @each $comKey, $comValue in $theme-components {
//      $class-suffix: if($colorKey, if($comKey == ""  , "", "-") + $colorKey, "");
//      $component-infix: if($comValue == null, "", "#{$comValue}-");
//
//      // .Theme-primary {
//      .#{$comKey + $class-suffix} {
//        &:not(.#{$comKey}-outline) .Btn-close {
//          @if (lightness($colorValue) < 80) {
//            filter: invert(1) grayscale(100%) brightness(200%);
//          }
//        }
//
//        /*
//        // Background colors
//        */
//        --#{$var-ls}#{$component-infix}bg: #{$colorValue};
//        --#{$var-ls}#{$component-infix}bg-hsl: #{colorToHSL($colorValue)};
//
//        --#{$var-ls}#{$component-infix}bg-body: #{$color-body};
//        --#{$var-ls}#{$component-infix}bg-active: #{$color-primary};
//        --#{$var-ls}#{$component-infix}bg-active-hsl: #{colorToHSL($color-primary)};
//
//        --#{$var-ls}#{$component-infix}bg-surface: #{$color-surface};
//        --#{$var-ls}#{$component-infix}bg-lightest: #{$color-lightest};
//        --#{$var-ls}#{$component-infix}bg-light: #{$color-light};
//        --#{$var-ls}#{$component-infix}bg-dark: #{$color-dark};
//        --#{$var-ls}#{$component-infix}bg-darkest: #{$color-darkest};
//
//        /*
//        // Foreground colors
//        */
//        --#{$var-ls}#{$component-infix}fg-muted: #{$fg-muted};
//
//        --#{$var-ls}#{$component-infix}fg-body: #{Best-fg-color($color-body)};
//        --#{$var-ls}#{$component-infix}fg-active: #{Best-fg-color($color-primary)};
//
//        --#{$var-ls}#{$component-infix}fg-surface: #{Best-fg-color($color-surface)};
//        --#{$var-ls}#{$component-infix}fg-lightest: #{Best-fg-color($color-lightest)};
//        --#{$var-ls}#{$component-infix}fg-light: #{Best-fg-color($color-light)};
//        --#{$var-ls}#{$component-infix}fg-dark: #{Best-fg-color($color-dark)};
//        --#{$var-ls}#{$component-infix}fg-darkest: #{Best-fg-color($color-darkest)};
//
//        /* Shadows */
//        --#{$var-ls}#{$component-infix}shadow-color-rgb: #{$color-shadow-rgb};
//
//        /* Border */
//        --#{$var-ls}#{$component-infix}border-color-hsl: #{colorToHSL($color-border)};
//      }
//    }
//  }
//}
