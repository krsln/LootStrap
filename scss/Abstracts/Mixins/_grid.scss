// ===========================================================================
// Mixins - Grid
// ===========================================================================
@use 'sass:math';

//@mixin make-Col-Auto() {
//  flex: 0 0 auto;
//  width: auto;
//}

@mixin make-Col($index, $numberOfColumns: 12) {
  //$percentage: percentage($index / $numberOfColumns);
  $percentage: percentage(math.div($index, $numberOfColumns));

  flex: 0 0 auto;
  width: $percentage;
}

@mixin make-Col-Offset($index, $numberOfColumns: 12) {
  //$num: $index / $numberOfColumns;
  $num: math.div($index, $numberOfColumns);
  margin-left: if($num == 0, 0, percentage($num));
}

//@mixin row-Cols($count) {
//  > * {
//    flex: 0 0 auto;
//    width: math.div(100%, $count);
//  }
//}

@mixin make-Grid-Cols($numberOfColumns: 12, $breakpoints: $breakpoints-Grid) {
  @each $breakpointKey, $breakpointValue in $breakpoints {
    $infix: if($breakpointKey == none, "", "-#{$breakpointKey}");
    // none -sm -md -lg -xl -xxl

    @include media-min-W($breakpointValue) {
      %Column#{$infix}-auto {
        flex: 0 0 auto;
        width: auto;
      }

      .Row-cols#{$infix}-auto > * {
        //@include make-Col-Auto();
        @extend %Column#{$infix}-auto;
      }

      @if $grid-Row-Columns > 0 {
        @for $index from 1 through $grid-Row-Columns {
          .Row-cols#{$infix}-#{$index} {
            //@include row-Cols($index);
            > * {
              flex: 0 0 auto;
              width: math.div(100%, $index);
            }
          }
        }
      }

      .Col#{$infix}-auto {
        //@include make-Col-Auto();
        @extend %Column#{$infix}-auto;
      }

      /*
      // Col-* Offset-*
      */

      .Col#{$infix} {
        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4
      }

      @if $numberOfColumns > 0 {
        @for $index from 1 through $numberOfColumns {
          .Col#{$infix}-#{$index} {
            @include make-Col($index, $numberOfColumns);
          }
        }

        // `$columns - 1` because offsetting by the width of an entire row isn't possible
        @for $i from 0 through ($numberOfColumns - 1) {
          @if not ($infix == "" and $i == 0) { // Avoid emitting useless .offset-0
            .Offset#{$infix}-#{$i} {
              @include make-Col-Offset($i, $numberOfColumns);
            }
          }
        }
      }

      /*
      // Gutters
      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.
      */

      @each $key, $value in $gutters-map {
        .G#{$infix}-#{$key},
        .GX#{$infix}-#{$key} {
          --#{$var-Prefix}gutter-x: #{$value};
        }

        .G#{$infix}-#{$key},
        .GY#{$infix}-#{$key} {
          --#{$var-Prefix}gutter-y: #{$value};
        }
      }

    }

  }
}
